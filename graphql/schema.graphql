"A datetime string with format `Y-m-d H:i:s`, e.g. `2018-05-23 13:43:32`."
scalar DateTime @scalar(class: "Nuwave\\Lighthouse\\Schema\\Types\\Scalars\\DateTime")

"Indicates what fields are available at the top level of a query operation."
# type Query {
#     "Find a single user by an identifying attribute."
#     user(
#       "Search by primary key."
#       id: ID @eq @rules(apply: ["prohibits:email", "required_without:email"])

#       "Search by email address."
#       email: String @eq @rules(apply: ["prohibits:id", "required_without:id", "email"])
#     ): User @find

#     "List multiple users."
#     users(
#       "Filters by name. Accepts SQL LIKE wildcards `%` and `_`."
#       name: String @where(operator: "like")
#     ): [User!]! @paginate(defaultCount: 10)

    
# }

type Query {
  user(id: ID @eq): User @find
  users: [User!]! @all
  users_with_paginate: [User!]! @paginate(defaultCount: 10)

  post(id: ID @eq): Post @find
  posts: [Post!]! @paginate(defaultCount: 10)
  # posts_by_user(user_id: ID @eq): Post @find
}

type Mutation {
  createUser(name: String!, email: String! @rules(apply: ["email", "unique:users"]), password: String! @hash): User! @create
  updateUser(id: ID!, name: String, email: String, password: String): User! @update
  deleteUser(id: ID!): User @delete
}

"Account of a person who utilizes this application."
type User {
    id: ID!
    name: String!
    email: String!
    email_verified_at: DateTime
    created_at: DateTime!
    updated_at: DateTime!
    posts: [Post!]
}

type Post {
  id: ID!
  name: String!,
  category: String!,
  created_at: DateTime!
  updated_at: DateTime!
  user: User!
}
